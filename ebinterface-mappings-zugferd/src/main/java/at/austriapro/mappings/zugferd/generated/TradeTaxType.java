//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-833 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.01.18 at 03:17:09 PM CET 
//


package at.austriapro.mappings.zugferd.generated;

import java.util.ArrayList;
import java.util.Collection;
import java.util.List;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for TradeTaxType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="TradeTaxType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="CalculatedAmount" type="{urn:un:unece:uncefact:data:standard:UnqualifiedDataType:15}AmountType" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="TypeCode" type="{urn:un:unece:uncefact:data:standard:QualifiedDataType:12}TaxTypeCodeType" minOccurs="0"/>
 *         &lt;element name="ExemptionReason" type="{urn:un:unece:uncefact:data:standard:UnqualifiedDataType:15}TextType" minOccurs="0"/>
 *         &lt;element name="BasisAmount" type="{urn:un:unece:uncefact:data:standard:UnqualifiedDataType:15}AmountType" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="LineTotalBasisAmount" type="{urn:un:unece:uncefact:data:standard:UnqualifiedDataType:15}AmountType" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="AllowanceChargeBasisAmount" type="{urn:un:unece:uncefact:data:standard:UnqualifiedDataType:15}AmountType" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="CategoryCode" type="{urn:un:unece:uncefact:data:standard:QualifiedDataType:12}TaxCategoryCodeType" minOccurs="0"/>
 *         &lt;element name="ApplicablePercent" type="{urn:un:unece:uncefact:data:standard:UnqualifiedDataType:15}PercentType" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "TradeTaxType", propOrder = {
    "calculatedAmount",
    "typeCode",
    "exemptionReason",
    "basisAmount",
    "lineTotalBasisAmount",
    "allowanceChargeBasisAmount",
    "categoryCode",
    "applicablePercent"
})
public class TradeTaxType {

    @XmlElement(name = "CalculatedAmount")
    protected List<AmountType> calculatedAmount;
    @XmlElement(name = "TypeCode")
    protected TaxTypeCodeType typeCode;
    @XmlElement(name = "ExemptionReason")
    protected TextType exemptionReason;
    @XmlElement(name = "BasisAmount")
    protected List<AmountType> basisAmount;
    @XmlElement(name = "LineTotalBasisAmount")
    protected List<AmountType> lineTotalBasisAmount;
    @XmlElement(name = "AllowanceChargeBasisAmount")
    protected List<AmountType> allowanceChargeBasisAmount;
    @XmlElement(name = "CategoryCode")
    protected TaxCategoryCodeType categoryCode;
    @XmlElement(name = "ApplicablePercent")
    protected PercentType applicablePercent;

    /**
     * Gets the value of the calculatedAmount property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the calculatedAmount property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getCalculatedAmount().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link AmountType }
     * 
     * 
     */
    public List<AmountType> getCalculatedAmount() {
        if (calculatedAmount == null) {
            calculatedAmount = new ArrayList<AmountType>();
        }
        return this.calculatedAmount;
    }

    /**
     * Gets the value of the typeCode property.
     * 
     * @return
     *     possible object is
     *     {@link TaxTypeCodeType }
     *     
     */
    public TaxTypeCodeType getTypeCode() {
        return typeCode;
    }

    /**
     * Sets the value of the typeCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link TaxTypeCodeType }
     *     
     */
    public void setTypeCode(TaxTypeCodeType value) {
        this.typeCode = value;
    }

    /**
     * Gets the value of the exemptionReason property.
     * 
     * @return
     *     possible object is
     *     {@link TextType }
     *     
     */
    public TextType getExemptionReason() {
        return exemptionReason;
    }

    /**
     * Sets the value of the exemptionReason property.
     * 
     * @param value
     *     allowed object is
     *     {@link TextType }
     *     
     */
    public void setExemptionReason(TextType value) {
        this.exemptionReason = value;
    }

    /**
     * Gets the value of the basisAmount property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the basisAmount property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getBasisAmount().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link AmountType }
     * 
     * 
     */
    public List<AmountType> getBasisAmount() {
        if (basisAmount == null) {
            basisAmount = new ArrayList<AmountType>();
        }
        return this.basisAmount;
    }

    /**
     * Gets the value of the lineTotalBasisAmount property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the lineTotalBasisAmount property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getLineTotalBasisAmount().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link AmountType }
     * 
     * 
     */
    public List<AmountType> getLineTotalBasisAmount() {
        if (lineTotalBasisAmount == null) {
            lineTotalBasisAmount = new ArrayList<AmountType>();
        }
        return this.lineTotalBasisAmount;
    }

    /**
     * Gets the value of the allowanceChargeBasisAmount property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the allowanceChargeBasisAmount property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getAllowanceChargeBasisAmount().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link AmountType }
     * 
     * 
     */
    public List<AmountType> getAllowanceChargeBasisAmount() {
        if (allowanceChargeBasisAmount == null) {
            allowanceChargeBasisAmount = new ArrayList<AmountType>();
        }
        return this.allowanceChargeBasisAmount;
    }

    /**
     * Gets the value of the categoryCode property.
     * 
     * @return
     *     possible object is
     *     {@link TaxCategoryCodeType }
     *     
     */
    public TaxCategoryCodeType getCategoryCode() {
        return categoryCode;
    }

    /**
     * Sets the value of the categoryCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link TaxCategoryCodeType }
     *     
     */
    public void setCategoryCode(TaxCategoryCodeType value) {
        this.categoryCode = value;
    }

    /**
     * Gets the value of the applicablePercent property.
     * 
     * @return
     *     possible object is
     *     {@link PercentType }
     *     
     */
    public PercentType getApplicablePercent() {
        return applicablePercent;
    }

    /**
     * Sets the value of the applicablePercent property.
     * 
     * @param value
     *     allowed object is
     *     {@link PercentType }
     *     
     */
    public void setApplicablePercent(PercentType value) {
        this.applicablePercent = value;
    }

    public TradeTaxType withCalculatedAmount(AmountType... values) {
        if (values!= null) {
            for (AmountType value: values) {
                getCalculatedAmount().add(value);
            }
        }
        return this;
    }

    public TradeTaxType withCalculatedAmount(Collection<AmountType> values) {
        if (values!= null) {
            getCalculatedAmount().addAll(values);
        }
        return this;
    }

    public TradeTaxType withTypeCode(TaxTypeCodeType value) {
        setTypeCode(value);
        return this;
    }

    public TradeTaxType withExemptionReason(TextType value) {
        setExemptionReason(value);
        return this;
    }

    public TradeTaxType withBasisAmount(AmountType... values) {
        if (values!= null) {
            for (AmountType value: values) {
                getBasisAmount().add(value);
            }
        }
        return this;
    }

    public TradeTaxType withBasisAmount(Collection<AmountType> values) {
        if (values!= null) {
            getBasisAmount().addAll(values);
        }
        return this;
    }

    public TradeTaxType withLineTotalBasisAmount(AmountType... values) {
        if (values!= null) {
            for (AmountType value: values) {
                getLineTotalBasisAmount().add(value);
            }
        }
        return this;
    }

    public TradeTaxType withLineTotalBasisAmount(Collection<AmountType> values) {
        if (values!= null) {
            getLineTotalBasisAmount().addAll(values);
        }
        return this;
    }

    public TradeTaxType withAllowanceChargeBasisAmount(AmountType... values) {
        if (values!= null) {
            for (AmountType value: values) {
                getAllowanceChargeBasisAmount().add(value);
            }
        }
        return this;
    }

    public TradeTaxType withAllowanceChargeBasisAmount(Collection<AmountType> values) {
        if (values!= null) {
            getAllowanceChargeBasisAmount().addAll(values);
        }
        return this;
    }

    public TradeTaxType withCategoryCode(TaxCategoryCodeType value) {
        setCategoryCode(value);
        return this;
    }

    public TradeTaxType withApplicablePercent(PercentType value) {
        setApplicablePercent(value);
        return this;
    }

}
