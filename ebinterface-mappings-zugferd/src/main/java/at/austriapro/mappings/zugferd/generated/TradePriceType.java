//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-833 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.09.05 at 03:52:26 PM CEST 
//


package at.austriapro.mappings.zugferd.generated;

import java.util.ArrayList;
import java.util.Collection;
import java.util.List;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for TradePriceType complex type.
 *
 * <p>The following schema fragment specifies the expected content contained within this class.
 *
 * <pre>
 * &lt;complexType name="TradePriceType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="ChargeAmount" type="{urn:un:unece:uncefact:data:standard:UnqualifiedDataType:15}AmountType"
 * maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="BasisQuantity" type="{urn:un:unece:uncefact:data:standard:UnqualifiedDataType:15}QuantityType"
 * minOccurs="0"/>
 *         &lt;element name="AppliedTradeAllowanceCharge" type="{urn:un:unece:uncefact:data:standard:ReusableAggregateBusinessInformationEntity:12}TradeAllowanceChargeType"
 * maxOccurs="unbounded" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "TradePriceType", propOrder = {
    "chargeAmount",
    "basisQuantity",
    "appliedTradeAllowanceCharge"
})
public class TradePriceType {

  @XmlElement(name = "ChargeAmount")
  protected List<AmountType> chargeAmount;
  @XmlElement(name = "BasisQuantity")
  protected QuantityType basisQuantity;
  @XmlElement(name = "AppliedTradeAllowanceCharge")
  protected List<TradeAllowanceChargeType> appliedTradeAllowanceCharge;

  /**
   * Gets the value of the chargeAmount property.
   *
   * <p> This accessor method returns a reference to the live list, not a snapshot. Therefore any
   * modification you make to the returned list will be present inside the JAXB object. This is why
   * there is not a <CODE>set</CODE> method for the chargeAmount property.
   *
   * <p> For example, to add a new item, do as follows:
   * <pre>
   *    getChargeAmount().add(newItem);
   * </pre>
   *
   *
   * <p> Objects of the following type(s) are allowed in the list {@link AmountType }
   */
  public List<AmountType> getChargeAmount() {
    if (chargeAmount == null) {
      chargeAmount = new ArrayList<AmountType>();
    }
    return this.chargeAmount;
  }

  /**
   * Gets the value of the basisQuantity property.
   *
   * @return possible object is {@link QuantityType }
   */
  public QuantityType getBasisQuantity() {
    return basisQuantity;
  }

  /**
   * Sets the value of the basisQuantity property.
   *
   * @param value allowed object is {@link QuantityType }
   */
  public void setBasisQuantity(QuantityType value) {
    this.basisQuantity = value;
  }

  /**
   * Gets the value of the appliedTradeAllowanceCharge property.
   *
   * <p> This accessor method returns a reference to the live list, not a snapshot. Therefore any
   * modification you make to the returned list will be present inside the JAXB object. This is why
   * there is not a <CODE>set</CODE> method for the appliedTradeAllowanceCharge property.
   *
   * <p> For example, to add a new item, do as follows:
   * <pre>
   *    getAppliedTradeAllowanceCharge().add(newItem);
   * </pre>
   *
   *
   * <p> Objects of the following type(s) are allowed in the list {@link TradeAllowanceChargeType }
   */
  public List<TradeAllowanceChargeType> getAppliedTradeAllowanceCharge() {
    if (appliedTradeAllowanceCharge == null) {
      appliedTradeAllowanceCharge = new ArrayList<TradeAllowanceChargeType>();
    }
    return this.appliedTradeAllowanceCharge;
  }

  public TradePriceType withChargeAmount(AmountType... values) {
    if (values != null) {
      for (AmountType value : values) {
        getChargeAmount().add(value);
      }
    }
    return this;
  }

  public TradePriceType withChargeAmount(Collection<AmountType> values) {
    if (values != null) {
      getChargeAmount().addAll(values);
    }
    return this;
  }

  public TradePriceType withBasisQuantity(QuantityType value) {
    setBasisQuantity(value);
    return this;
  }

  public TradePriceType withAppliedTradeAllowanceCharge(TradeAllowanceChargeType... values) {
    if (values != null) {
      for (TradeAllowanceChargeType value : values) {
        getAppliedTradeAllowanceCharge().add(value);
      }
    }
    return this;
  }

  public TradePriceType withAppliedTradeAllowanceCharge(
      Collection<TradeAllowanceChargeType> values) {
    if (values != null) {
      getAppliedTradeAllowanceCharge().addAll(values);
    }
    return this;
  }

}
