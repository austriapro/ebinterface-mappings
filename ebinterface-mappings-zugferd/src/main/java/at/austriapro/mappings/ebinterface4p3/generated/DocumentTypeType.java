//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-833 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.01.20 at 05:47:04 PM CET 
//


package at.austriapro.mappings.ebinterface4p3.generated;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for DocumentTypeType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="DocumentTypeType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="CreditMemo"/>
 *     &lt;enumeration value="FinalSettlement"/>
 *     &lt;enumeration value="Invoice"/>
 *     &lt;enumeration value="InvoiceForAdvancePayment"/>
 *     &lt;enumeration value="InvoiceForPartialDelivery"/>
 *     &lt;enumeration value="SelfBilling"/>
 *     &lt;enumeration value="SubsequentCredit"/>
 *     &lt;enumeration value="SubsequentDebit"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "DocumentTypeType")
@XmlEnum
public enum DocumentTypeType {

    @XmlEnumValue("CreditMemo")
    CREDIT_MEMO("CreditMemo"),
    @XmlEnumValue("FinalSettlement")
    FINAL_SETTLEMENT("FinalSettlement"),
    @XmlEnumValue("Invoice")
    INVOICE("Invoice"),
    @XmlEnumValue("InvoiceForAdvancePayment")
    INVOICE_FOR_ADVANCE_PAYMENT("InvoiceForAdvancePayment"),
    @XmlEnumValue("InvoiceForPartialDelivery")
    INVOICE_FOR_PARTIAL_DELIVERY("InvoiceForPartialDelivery"),
    @XmlEnumValue("SelfBilling")
    SELF_BILLING("SelfBilling"),
    @XmlEnumValue("SubsequentCredit")
    SUBSEQUENT_CREDIT("SubsequentCredit"),
    @XmlEnumValue("SubsequentDebit")
    SUBSEQUENT_DEBIT("SubsequentDebit");
    private final String value;

    DocumentTypeType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static DocumentTypeType fromValue(String v) {
        for (DocumentTypeType c: DocumentTypeType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
